{{- if (or (and (ne (.Values.server.enabled | toString) "-") .Values.server.enabled) (and (eq (.Values.server.enabled | toString) "-") .Values.global.enabled)) }}
{{- if (or (eq (include "monitoring.enabled" .) "true") (and (eq (.Values.monitoring.enabled | toString) "-") .Values.global.enabled)) }}
{{- if .Values.monitoring.installDashboard }}
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  labels:
    {{- include "consul-service.coreLabels" . | nindent 4 }}
    app.kubernetes.io/component: monitoring
    prometheus: consul-tls-static-metrics-rules
    role: record-rules
  name: {{ template "consul.fullname" . }}-tls-static-metrics-rules
spec:
  groups:
    - name: {{ .Release.Namespace }}-{{ .Release.Name }}
      partial_response_strategy: ''
      rules:
        {{- include "global.tlsStaticMetric" (dict "namespace" .Release.Namespace "application" "consul-service" "service" (include "consul.fullname" .) "enableTls" (include "consul.tlsEnabled" .) "secret" (include "server.tlsSecretName" .) "certManaged" .Values.global.tls.certManager.enabled "certificate" (printf "%s-tls-server-certificate" (include "consul.fullname" .))) | nindent 8 }}
        {{- if .Values.backupDaemon.enabled }}
        {{- include "global.tlsStaticMetric" (dict "namespace" .Release.Namespace "application" "consul-service" "service" (printf "%s-backup-daemon" (include "consul.fullname" .)) "enableTls" (include "backup-daemon.tlsEnabled" .) "secret" (include "backupDaemon.tlsSecretName" .) "certManaged" .Values.global.tls.certManager.enabled "certificate" (printf "%s-backup-daemon-tls-certificate" (include "consul.fullname" .))) | nindent 8 }}
        {{- end }}
        {{- if eq (include "consul.enableDisasterRecovery" .) "true" }}
        {{- include "global.tlsStaticMetric" (dict "namespace" .Release.Namespace "application" "consul-service" "service" (printf "%s-disaster-recovery-daemon" (include "consul.fullname" .)) "enableTls" (include "disaster-recovery.tlsEnabled" .) "secret" (include "disaster-recovery.certSecretName" .) "certManaged" .Values.global.tls.certManager.enabled "certificate" (printf "%s-drd-tls-certificate" (include "consul.fullname" .))) | nindent 8 }}
        {{- end }}
{{- end }}
{{- end }}
{{- end }}

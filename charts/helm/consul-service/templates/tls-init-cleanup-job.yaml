{{- if (or (and (ne (.Values.server.enabled | toString) "-") .Values.server.enabled) (and (eq (.Values.server.enabled | toString) "-") .Values.global.enabled)) }}
{{- if and .Values.global.tls.enabled (not .Values.global.tls.certManager.enabled) (not (eq (include "server.certificatesSpecified" .) "true")) }}
# tls-init-cleanup job deletes Kubernetes secrets created by tls-init
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "consul.fullname" . }}-tls-init-cleanup
  labels:
    app: {{ template "consul.name" . }}
    chart: {{ template "consul.chart" . }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
    name: {{ template "consul.fullname" . }}-tls-init-cleanup
    {{- include "consul-service.defaultLabels" . | nindent 4 }}
    app.kubernetes.io/name: {{ template "consul.fullname" . }}-tls-init-cleanup
    app.kubernetes.io/instance: {{ cat (printf "%s-tls-init-cleanup"  (include "consul.fullname" .)) .Values.DELIMITER .Release.Namespace | nospace | trunc 63 }}
    app.kubernetes.io/technology: python
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": hook-succeeded
    {{- /* Hook weight needs to be 1 so that the service account is provisioned first */}}
    "helm.sh/hook-weight": "1"
spec:
  template:
    metadata:
      name: {{ template "consul.fullname" . }}-tls-init-cleanup
      labels:
        app: {{ template "consul.name" . }}
        chart: {{ template "consul.chart" . }}
        release: {{ .Release.Name }}
        component: tls-init-cleanup
        {{- with .Values.global.extraLabels }}
          {{- toYaml . | nindent 8 -}}
        {{- end }}
        name: {{ template "consul.fullname" . }}-tls-init-cleanup
        app.kubernetes.io/name: {{ template "consul.fullname" . }}-tls-init-cleanup
      annotations:
        "consul.hashicorp.com/connect-inject": "false"
    spec:
      {{- if not (eq (include "openshift.enabled" .) "true") }}
      securityContext:
        {{- include "server.securityContext" . | nindent 8 }}
      {{- end }}
      restartPolicy: Never
      serviceAccountName: {{ template "consul.fullname" . }}-tls-init-cleanup
      containers:
        - name: tls-init-cleanup
          image: "{{ template "consul.image" . }}"
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          command:
            - "/bin/sh"
            - "-ec"
            - |
              {{- if (not (and .Values.global.tls.caCert.secretName .Values.global.tls.caKey.secretName)) }}
              curl -s -X DELETE --cacert /var/run/secrets/kubernetes.io/serviceaccount/ca.crt \
                https://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT}/api/v1/namespaces/${NAMESPACE}/secrets/{{ template "consul.fullname" . }}-ca-cert \
                -H "Authorization: Bearer $( cat /var/run/secrets/kubernetes.io/serviceaccount/token )"
              curl -s -X DELETE --cacert /var/run/secrets/kubernetes.io/serviceaccount/ca.crt \
                https://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT}/api/v1/namespaces/${NAMESPACE}/secrets/{{ template "consul.fullname" . }}-ca-key \
                -H "Authorization: Bearer $( cat /var/run/secrets/kubernetes.io/serviceaccount/token )"
              {{- end }}
              curl -s -X DELETE --cacert /var/run/secrets/kubernetes.io/serviceaccount/ca.crt \
                https://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT}/api/v1/namespaces/${NAMESPACE}/secrets/{{ template "consul.fullname" . }}-server-cert \
                -H "Authorization: Bearer $( cat /var/run/secrets/kubernetes.io/serviceaccount/token )"
          resources:
            requests:
              memory: "50Mi"
              cpu: "50m"
            limits:
              memory: "50Mi"
              cpu: "50m"
          securityContext:
            {{- include "consul.globalContainerSecurityContext" . | nindent 12 }}
{{- end }}
{{- end }}
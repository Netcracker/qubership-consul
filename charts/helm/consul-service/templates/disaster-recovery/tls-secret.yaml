{{- $secretName := include "disaster-recovery.certSecretName" . }}
{{- if and (eq (include "disaster-recovery.tlsEnabled" .) "true") (not .Values.global.tls.certManager.enabled) (or (eq (include "disaster-recovery.certificatesSpecified" .) "true") (not (lookup "v1" "Secret" .Release.Namespace $secretName))) }}
apiVersion: v1
kind: Secret
type: kubernetes.io/tls
metadata:
  name: {{ $secretName }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "consul-service.defaultLabels" . | nindent 4 }}
  annotations:
    "helm.sh/resource-policy": keep
data:
{{- if eq (include "disaster-recovery.certificatesSpecified" .) "true" }}
  tls.crt: {{ .Values.global.disasterRecovery.tls.certificates.crt | quote }}
  tls.key: {{ .Values.global.disasterRecovery.tls.certificates.key | quote }}
  ca.crt: {{ .Values.global.disasterRecovery.tls.certificates.ca | quote }}
{{- else }}
{{ include "disaster-recovery.generateCerts" . | indent 2 }}
{{- end }}
{{- end }}
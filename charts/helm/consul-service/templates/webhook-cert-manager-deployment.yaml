{{- if .Values.connectInject.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "consul.fullname" . }}-webhook-cert-manager
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "consul.name" . }}
    chart: {{ template "consul.chart" . }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
    component: webhook-cert-manager
    {{- with .Values.global.extraLabels }}
      {{- toYaml . | nindent 4 -}}
    {{- end }}
    name: {{ template "consul.fullname" . }}-webhook-cert-manager
    {{- include "consul-service.defaultLabels" . | nindent 4 }}
    app.kubernetes.io/name: {{ template "consul.fullname" . }}-webhook-cert-manager
    app.kubernetes.io/instance: {{ cat (printf "%s-webhook-cert-manager"  (include "consul.fullname" .)) .Values.DELIMITER .Release.Namespace | nospace | trunc 63 }}
    app.kubernetes.io/technology: go
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "consul.name" . }}
      chart: {{ template "consul.chart" . }}
      heritage: {{ .Release.Service }}
      release: {{ .Release.Name }}
      component: webhook-cert-manager
  template:
    metadata:
      labels:
        {{- with .Values.global.extraLabels }}
          {{- toYaml . | nindent 8 -}}
        {{- end }}
        {{- with .Values.connectInject.extraLabels }}
          {{- toYaml . | nindent 8 -}}
        {{- end }}
        app: {{ template "consul.name" . }}
        chart: {{ template "consul.chart" . }}
        heritage: {{ .Release.Service }}
        release: {{ .Release.Name }}
        component: webhook-cert-manager
        restore-policy: restart
        name: {{ template "consul.fullname" . }}-webhook-cert-manager
        app.kubernetes.io/name: {{ template "consul.fullname" . }}-webhook-cert-manager
      annotations:
        "consul.hashicorp.com/connect-inject": "false"
        "consul.hashicorp.com/config-checksum": {{ include (print $.Template.BasePath "/webhook-cert-manager-configmap.yaml") . | sha256sum }}
    spec:
      containers:
      - command:
        - "/bin/sh"
        - "-ec"
        - |
          consul-k8s-control-plane webhook-cert-manager \
            -config-file=/bootstrap/config/webhook-config.json \
            -deployment-name={{ template "consul.fullname" . }}-webhook-cert-manager \
            -deployment-namespace={{ .Release.Namespace }}
        image: {{ template "consul-k8s.image" . }}
        name: webhook-cert-manager
        resources:
          limits:
            cpu: 100m
            memory: 50Mi
          requests:
            cpu: 100m
            memory: 50Mi
        securityContext:
          {{- include "consul.globalContainerSecurityContext" . | nindent 10 }}
        livenessProbe:
          exec:
            command:
              - /bin/sh
              - -ec
              - |
                pgrep -f 'consul-k8s-control-plane.*webhook-cert-manager' >/dev/null
          initialDelaySeconds: 30
          periodSeconds: 20
          timeoutSeconds: 3
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
              - /bin/sh
              - -ec
              - |
                pgrep -f 'consul-k8s-control-plane.*webhook-cert-manager' >/dev/null
          initialDelaySeconds: 30
          periodSeconds: 20
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: config
          mountPath: /bootstrap/config
      terminationGracePeriodSeconds: 10
      serviceAccountName: {{ template "consul.fullname" . }}-webhook-cert-manager
      {{- if not (eq (include "openshift.enabled" .) "true") }}
      securityContext:
        {{- include "consul.globalPodSecurityContext" . | nindent 8 }}
        {{- with .Values.connectInject.securityContext }}
        {{- toYaml . | nindent 8 -}}
        {{- end }}
      {{- end }}
      volumes:
      - name: config
        configMap:
          name: {{ template "consul.fullname" . }}-webhook-cert-manager-config
{{- end }}
